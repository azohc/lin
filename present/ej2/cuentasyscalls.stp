#! /usr/bin/env stap

# declaracion variables globales
global opens, reads, writes, totals

# evento begin primer evento
probe begin { 
	printf("starting probe\n") 
}

# evento cualquier open
probe syscall.open {
	opens[execname()] <<< 1 
}

# event return de cualquier read 
probe syscall.read.return {
	  if ( retval >= 0 ) { 	#  si se han leido caracteres
		    reads[execname()] <<< retval
		    totals[execname()] <<< retval
	  }
}

# event return de cualquier write
probe syscall.write.return {
	  if (retval >= 0 ) {	#  si se han escrito caracteres
		    writes[execname()] <<< retval
		    totals[execname()] <<< retval
	  }
}

probe end {
  printf("\n%16s %8s %8s %8s %8s %8s %8s %8s\n",
    "", "", "", "read", "read", "", "write", "write")
  printf("%16s %8s %8s %8s %8s %8s %8s %8s\n",
    "name", "open", "read", "KB tot", "B avg", "write", "KB tot", "B avg")
  foreach (name in totals @sum- limit 20) { # sort by total io
    printf("%16s %8d %8d %8d %8d %8d %8d %8d\n",
      name, @count(opens[name]),
      @count(reads[name]),
      (@count(reads[name]) ? @sum(reads[name])>>10 : 0 ),
      (@count(reads[name]) ? @avg(reads[name]) : 0 ),
      @count(writes[name]),
      (@count(writes[name]) ? @sum(writes[name])>>10 : 0 ),
      (@count(writes[name]) ? @avg(writes[name]) : 0 ))
  }
}